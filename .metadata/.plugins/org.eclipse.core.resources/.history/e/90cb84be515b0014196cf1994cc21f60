package View;

import javax.imageio.ImageIO;
import javax.swing.*;

import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;



public class ControlPanel extends JPanel{
	
	
	private JPanel rightPanel;
	private JPanel commandPanel;
	private Box commandBox;
	private JPanel ledsPanel;
	private BufferedImage leverImage;
	private JLabel leverLabel;
	private BufferedImage caseImage;
	private JLabel caseLabel;
	private BufferedImage screenImage;
	private JLabel screenLabel;
	private BufferedImage greenLedImage;
	private JLabel greenLedLabel;
	private BufferedImage orangeLedImage;
	private JLabel orangeLedLabel;
	private BufferedImage redLedImage;
	private JLabel redLedLabel;
	
	
	public ControlPanel(){
		prepareInterface();
	}

	private void prepareInterface(){
		
		//CONTROL PANEL - MAIN PANE
		GridBagLayout grid = new GridBagLayout();
		this.setSize(1000,1000);
		this.setLayout(grid);
		
		//INIT CONSTRAINTS
		GridBagConstraints gbc = new GridBagConstraints();
		gbc.gridx = gbc.gridy = 0;
		gbc.gridwidth = GridBagConstraints.REMAINDER;
		gbc.gridheight = 1;
		gbc.anchor = GridBagConstraints.LINE_START;
		
		/*LEDS PANEL
		 * 
		 */
		
		ledsPanel = new JPanel();
				
				
		//GREEN LED LABEL
		try {
			greenLedImage = ImageIO.read(new File("images/greenOff2.png"));
		} catch (IOException e) {
			
			e.printStackTrace();
		}
		greenLedLabel = new JLabel(new ImageIcon(greenLedImage));
		ledsPanel.add(greenLedLabel);
				
				
		//ORANGE LED LABEL
		try {
			orangeLedImage = ImageIO.read(new File("images/orangeOff2.png"));
		} catch (IOException e) {
			e.printStackTrace();
		}
		orangeLedLabel = new JLabel(new ImageIcon(orangeLedImage));
		ledsPanel.add(orangeLedLabel);

				
		//RED LED LABEL
		try {
			redLedImage = ImageIO.read(new File("images/redOff2.png"));
		} catch (IOException e) {
			e.printStackTrace();
		}
		redLedLabel = new JLabel(new ImageIcon(redLedImage));
		ledsPanel.add(redLedLabel);
		
		
		//ADD LEDS PANEL TO THE MAIN PANEL
		gbc.gridx = gbc.gridy = 0;
		gbc.gridwidth = GridBagConstraints.REMAINDER;
		gbc.gridheight = 1;
		gbc.anchor = GridBagConstraints.LINE_START;
		gbc.insets = new Insets(10, 15, 0, 0);
		this.add(ledsPanel);
		
		/*LEDS PANEL - END
		 * 
		 */
		
		
		
		
		
		
		//SCREEN - LEFT PANEL
		try {
			screenImage = ImageIO.read(new File("images/gearOut2.png"));
		} catch (IOException e) {
			e.printStackTrace();
		}
		screenLabel = new JLabel(new ImageIcon(screenImage));
		screenLabel.setHorizontalAlignment(JLabel.LEFT);
		
				
		//COMMAND BOX
		commandBox = Box.createVerticalBox();
		try {
			leverImage = ImageIO.read(new File("images/lever2.png"));
		} catch (IOException e) {
			e.printStackTrace();
		}
		leverLabel = new JLabel(new ImageIcon(leverImage));
		leverLabel.setAlignmentX(JLabel.CENTER_ALIGNMENT);
		commandBox.add(leverLabel);
		
		try {
			caseImage = ImageIO.read(new File("images/leverCase2.png"));
		} catch (IOException e) {
			e.printStackTrace();
		}
		caseLabel = new JLabel(new ImageIcon(caseImage));
		caseLabel.setAlignmentX(JLabel.CENTER_ALIGNMENT);
		commandBox.add(caseLabel);
		
		
		
		gbc.fill = GridBagConstraints.HORIZONTAL;
		gbc.gridx = 1;
		gbc.gridy = 1;
		gbc.weightx = 1;
		gbc.weighty = 1;
		//gbc.anchor = GridBagConstraints.SOUTHEAST;
		gbc.fill = GridBagConstraints.BOTH;
		this.add(commandBox, gbc);
		
		gbc.fill = GridBagConstraints.HORIZONTAL;
		gbc.gridx = 0;
		gbc.gridy = 1;
		gbc.gridheight = GridBagConstraints.REMAINDER;
		gbc.weightx = 1;
		gbc.weighty = 1;
		gbc.anchor = GridBagConstraints.FIRST_LINE_START;
		gbc.fill = GridBagConstraints.BOTH;
		this.add(screenLabel, gbc);
		
		
		
		
		
	}

}
